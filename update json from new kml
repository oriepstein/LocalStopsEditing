<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KML to JSON Merger</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .upload-icon {
            width: 48px;
            height: 48px;
            margin: 0 auto 8px;
            color: #9CA3AF;
        }
        .status-icon {
            width: 20px;
            height: 20px;
            flex-shrink: 0;
            margin-right: 12px;
            margin-top: 2px;
        }
        .download-icon {
            width: 20px;
            height: 20px;
            margin-right: 8px;
        }
    </style>
</head>
<body>
    <div id="app" class="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-8">
        <div class="max-w-4xl mx-auto">
            <h1 class="text-4xl font-bold text-gray-800 mb-2">KML to JSON Merger</h1>
            <p class="text-gray-600 mb-8">Update your existing JSON with new data from a KML file</p>

            <div class="bg-white rounded-lg shadow-lg p-6 mb-6">
                <h2 class="text-xl font-semibold mb-4 text-gray-700">Step 1: Upload Files</h2>
                
                <div class="grid md:grid-cols-2 gap-4 mb-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Existing JSON File
                        </label>
                        <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-indigo-500 transition-colors">
                            <svg class="upload-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                            </svg>
                            <input
                                type="file"
                                accept=".json"
                                id="json-upload"
                                class="hidden"
                            />
                            <label
                                for="json-upload"
                                class="cursor-pointer text-indigo-600 hover:text-indigo-700 font-medium"
                            >
                                Choose JSON file
                            </label>
                            <p id="json-status" class="text-sm text-green-600 mt-2 hidden"></p>
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Updated KML File
                        </label>
                        <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-indigo-500 transition-colors">
                            <svg class="upload-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                            </svg>
                            <input
                                type="file"
                                accept=".kml,.xml"
                                id="kml-upload"
                                class="hidden"
                            />
                            <label
                                for="kml-upload"
                                class="cursor-pointer text-indigo-600 hover:text-indigo-700 font-medium"
                            >
                                Choose KML file
                            </label>
                            <p id="kml-status" class="text-sm text-green-600 mt-2 hidden"></p>
                        </div>
                    </div>
                </div>

                <button
                    id="merge-btn"
                    disabled
                    class="w-full bg-indigo-600 text-white py-3 rounded-lg font-semibold hover:bg-indigo-700 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors"
                >
                    Merge Data
                </button>
            </div>

            <div id="status-message" class="hidden bg-green-50 border border-green-200 rounded-lg p-4 mb-6 flex items-start">
                <svg class="status-icon text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p id="status-text" class="text-green-800"></p>
            </div>

            <div id="error-message" class="hidden bg-red-50 border border-red-200 rounded-lg p-4 mb-6 flex items-start">
                <svg class="status-icon text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
                <p id="error-text" class="text-red-800"></p>
            </div>

            <div id="result-section" class="hidden bg-white rounded-lg shadow-lg p-6">
                <h2 class="text-xl font-semibold mb-4 text-gray-700">Step 2: Download Result</h2>
                <button
                    id="download-btn"
                    class="w-full bg-green-600 text-white py-3 rounded-lg font-semibold hover:bg-green-700 transition-colors flex items-center justify-center"
                >
                    <svg class="download-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                    </svg>
                    Download Merged JSON
                </button>
                
                <div class="mt-6 bg-gray-50 rounded-lg p-4 max-h-96 overflow-y-auto">
                    <h3 class="font-semibold text-gray-700 mb-2">Preview (first 5 locations):</h3>
                    <pre id="preview" class="text-xs text-gray-600 whitespace-pre-wrap"></pre>
                    <p id="more-locations" class="text-sm text-gray-500 mt-2 italic hidden"></p>
                </div>
            </div>

            <div class="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h3 class="font-semibold text-blue-900 mb-2">How it works:</h3>
                <ul class="text-sm text-blue-800 space-y-1">
                    <li>• Locations are matched by name (case-insensitive)</li>
                    <li>• KML data always overrides existing JSON data for matching locations</li>
                    <li>• New locations from KML are added to the result</li>
                    <li>• Locations only in JSON are preserved</li>
                    <li>• All locations maintain the same field structure</li>
                </ul>
            </div>
        </div>
    </div>

    <script>
        var existingJSON = null;
        var kmlFile = null;
        var mergedData = null;

        var jsonUpload = document.getElementById('json-upload');
        var kmlUpload = document.getElementById('kml-upload');
        var mergeBtn = document.getElementById('merge-btn');
        var downloadBtn = document.getElementById('download-btn');

        jsonUpload.addEventListener('change', function(e) {
            var file = e.target.files[0];
            if (!file) return;

            var reader = new FileReader();
            reader.onload = function(event) {
                try {
                    existingJSON = JSON.parse(event.target.result);
                    document.getElementById('json-status').textContent = '✓ ' + existingJSON.length + ' locations loaded';
                    document.getElementById('json-status').classList.remove('hidden');
                    showStatus('Existing JSON loaded successfully');
                    checkMergeButton();
                } catch (err) {
                    showError('Error parsing JSON file: ' + err.message);
                }
            };
            reader.readAsText(file);
        });

        kmlUpload.addEventListener('change', function(e) {
            var file = e.target.files[0];
            if (!file) return;

            var reader = new FileReader();
            reader.onload = function(event) {
                kmlFile = event.target.result;
                document.getElementById('kml-status').textContent = '✓ KML file loaded';
                document.getElementById('kml-status').classList.remove('hidden');
                showStatus('KML file loaded successfully');
                checkMergeButton();
            };
            reader.readAsText(file);
        });

        function checkMergeButton() {
            if (existingJSON && kmlFile) {
                mergeBtn.disabled = false;
            }
        }

        function parseKML(kmlString) {
            var parser = new DOMParser();
            var xmlDoc = parser.parseFromString(kmlString, 'text/xml');
            
            var placemarks = xmlDoc.getElementsByTagName('Placemark');
            var locations = [];

            for (var i = 0; i < placemarks.length; i++) {
                var placemark = placemarks[i];
                
                var nameEl = placemark.getElementsByTagName('name')[0];
                var name = nameEl ? nameEl.textContent : '';
                
                var descEl = placemark.getElementsByTagName('description')[0];
                var description = descEl ? descEl.textContent : '';
                
                var coordEl = placemark.getElementsByTagName('coordinates')[0];
                var coordinates = coordEl ? coordEl.textContent.trim() : '';
                
                var lon = null;
                var lat = null;
                if (coordinates) {
                    var coords = coordinates.split(',');
                    lon = parseFloat(coords[0]);
                    lat = parseFloat(coords[1]);
                }

                var categories = [];
                var url = null;
                var imageURL = null;
                var info = null;

                var extendedData = placemark.getElementsByTagName('ExtendedData')[0];
                if (extendedData) {
                    var dataElements = extendedData.getElementsByTagName('Data');
                    for (var j = 0; j < dataElements.length; j++) {
                        var dataElement = dataElements[j];
                        var dataName = dataElement.getAttribute('name');
                        var valueEl = dataElement.getElementsByTagName('value')[0];
                        var value = valueEl ? valueEl.textContent : null;

                        if (dataName === 'categories' && value) {
                            categories = value.split(',').map(function(c) { return c.trim(); }).filter(function(c) { return c; });
                        } else if (dataName === 'url') {
                            url = value || null;
                        } else if (dataName === 'imageURL') {
                            imageURL = value || null;
                        } else if (dataName === 'info') {
                            info = value || null;
                        }
                    }
                }

                locations.push({
                    name: name,
                    lat: lat,
                    lon: lon,
                    icon: null,
                    imageURL: imageURL,
                    description: description,
                    info: info,
                    categories: categories,
                    url: url
                });
            }

            return locations;
        }

        mergeBtn.addEventListener('click', function() {
            if (!existingJSON || !kmlFile) {
                showError('Please upload both files before merging');
                return;
            }

            try {
                var kmlLocations = parseKML(kmlFile);
                
                var existingMap = new Map();
                existingJSON.forEach(function(loc) {
                    existingMap.set(loc.name.toLowerCase(), loc);
                });

                var updatedNames = new Set();
                var result = [];

                kmlLocations.forEach(function(kmlLoc) {
                    var nameLower = kmlLoc.name.toLowerCase();
                    updatedNames.add(nameLower);
                    result.push(kmlLoc);
                });

                existingJSON.forEach(function(jsonLoc) {
                    var nameLower = jsonLoc.name.toLowerCase();
                    if (!updatedNames.has(nameLower)) {
                        result.push(jsonLoc);
                    }
                });

                mergedData = result;
                showStatus('Merge complete! ' + kmlLocations.length + ' locations from KML, ' + result.length + ' total locations in merged data.');
                
                document.getElementById('preview').textContent = JSON.stringify(mergedData.slice(0, 5), null, 2);
                if (mergedData.length > 5) {
                    document.getElementById('more-locations').textContent = '...and ' + (mergedData.length - 5) + ' more locations';
                    document.getElementById('more-locations').classList.remove('hidden');
                }
                document.getElementById('result-section').classList.remove('hidden');
            } catch (err) {
                showError('Error merging data: ' + err.message);
            }
        });

        downloadBtn.addEventListener('click', function() {
            if (!mergedData) return;

            var dataStr = JSON.stringify(mergedData, null, 2);
            var dataBlob = new Blob([dataStr], { type: 'application/json' });
            var url = URL.createObjectURL(dataBlob);
            var link = document.createElement('a');
            link.href = url;
            link.download = 'merged_locations.json';
            link.click();
            URL.revokeObjectURL(url);
        });

        function showStatus(message) {
            document.getElementById('status-text').textContent = message;
            document.getElementById('status-message').classList.remove('hidden');
            document.getElementById('error-message').classList.add('hidden');
        }

        function showError(message) {
            document.getElementById('error-text').textContent = message;
            document.getElementById('error-message').classList.remove('hidden');
            document.getElementById('status-message').classList.add('hidden');
        }
    </script>
</body>
</html>
